@model IEnumerable<RestaurantManagementSystem.Application.DTOs.MenuItem.MenuItemDto>
@{
    ViewData["Title"] = "Menu Items";
}

<h2 class="mb-4 text-primary text-center"><i class="fas fa-utensils"></i> Menu Items List</h2>

<a asp-action="Create" class="btn btn-success mb-3"><i class="fas fa-plus"></i> Add New Menu Item</a>

<div class="container">
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @if (!Model.Any())
        {
            <div class="col-12">
                <div class="alert alert-warning text-center">No available menu items found.</div>
            </div>
        }
        else
        {
            @foreach (var item in Model.Where(m => m.IsAvailable))
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0" style="border-radius: 10px; overflow: hidden;">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover; border-top-left-radius: 10px; border-top-right-radius: 10px;">
                        }
                        else
                        {
                            <div class="card-img-top" style="height: 200px; background-color: #f0f0f0; display: flex; align-items: center; justify-content: center; border-top-left-radius: 10px; border-top-right-radius: 10px;">
                                <span class="text-muted">No Image</span>
                            </div>
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-primary">@item.Name</h5>
                            <p class="card-text flex-grow-1">Category: @item.CategoryName</p>
                            <p class="card-text flex-grow-1">Prep Time: @item.PreparationTime min</p>
                            @if (item.DiscountedPrice.HasValue && item.DiscountedPrice < item.Price)
                            {
                                <span class="badge bg-warning text-dark fw-bold fs-6"><s>$@item.Price.ToString("F2")</s> $@item.DiscountedPrice.Value.ToString("F2") (Happy Hour!)</span>
                            }
                            else
                            {
                                <p class="card-text text-success fw-bold fs-5">$@item.Price.ToString("F2")</p>
                            }
                            <p class="card-text"><small class="text-muted">Orders Today: @item.DailyOrderCount</small></p>
                            <p class="card-text"><span class="badge @((item.IsAvailable) ? "bg-success" : "bg-danger")">@(item.IsAvailable ? "Available" : "Unavailable")</span></p>
                            <div class="mt-auto d-flex gap-2">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm"><i class="fas fa-eye"></i> Details</a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i> Edit</a>
                                <form asp-action="Delete" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?')"><i class="fas fa-trash"></i> Delete</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<!-- Custom CSS for Hover Effect -->
<style>
    .card:hover {
        transform: scale(1.03);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .badge {
        display: inline-block;
        padding: 0.25em 0.4em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: 0.25rem;
    }

        .badge.bg-warning {
            background-color: #ffc107 !important;
            color: #212529 !important;
        }
</style>

<!-- JavaScript for Image Loading -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const images = document.querySelectorAll('.card-img-top');
        images.forEach(img => {
            img.classList.add('loading');
            img.onload = () => img.classList.remove('loading');
            img.onerror = () => img.classList.remove('loading'); // Handle error
        });
    });
</script>